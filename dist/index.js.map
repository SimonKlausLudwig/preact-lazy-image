{"version":3,"file":"index.js","sources":["../src/components/lazy-image/index.js"],"sourcesContent":["import {Component} from 'preact';\nimport style from './style.scss';\n\nexport default class LazyImage extends Component {\n\n    componentWillMount() {\n        this.init(this.props);\n    }\n\n    componentDidMount() {\n        this.observe();\n    }\n\n    componentWillUnmount() {\n        this.unobserve();\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.src !== this.props.src) {\n            this.unobserve();\n            this.init(nextProps);\n            this.observe();\n        }\n    }\n\n    init(props) {\n        this.setState({url: props.placeholder});\n    }\n\n    unobserve() {\n        if (this.observer) {\n            this.observer.unobserve(this.img);\n        }\n    }\n\n\n    observe() {\n        let that = this;\n        this.observer = new IntersectionObserver((entries) => {\n            entries.forEach(entry => {\n                if (entry.intersectionRatio > 0) {\n                    this.loadRealImage(that.props.src);\n                    this.observer.unobserve(entry.target);\n                }\n            })\n        }, {\n            rootMargin: this.props.rootMargin || '150px 0px',\n            threshold: 0.1\n        });\n        this.observer.observe(this.img);\n    }\n\n    loadRealImage(src) {\n        this.loadImage(src, (a) => {\n            this.setState({url: src, loaded: true});\n        })\n    }\n\n    loadImage(src, onLoad) {\n        if (this.img.src.endsWith(src)) {\n            console.log(\"image already loaded!\");\n            onLoad();\n            return;\n        }\n        let img = new Image();\n        img.onload = onLoad;\n        img.src = src;\n    }\n\n    render() {\n        return <div className={style.wrapper}>\n            <img ref={img => this.img = img}\n                 className={!this.state.loaded ? [style.hidden] : \"\"}\n                 src={this.state.url}/>\n            <img className={style.backup} src={this.props.backup || this.props.placeholder}/>\n        </div>\n    };\n}\n"],"names":["componentWillMount","this","init","props","componentDidMount","observe","componentWillUnmount","unobserve","componentWillReceiveProps","nextProps","nextContext","src","setState","url","placeholder","observer","img","that","IntersectionObserver","entries","forEach","entry","intersectionRatio","loadRealImage","target","rootMargin","threshold","loadImage","a","loaded","onLoad","endsWith","console","log","let","Image","onload","render","Component"],"mappings":"wLAKIA,8BACIC,KAAKC,KAAKD,KAAKE,oBAGnBC,6BACIH,KAAKI,uBAGTC,gCACIL,KAAKM,yBAGTC,mCAA0BC,EAAWC,GAC7BD,EAAUE,MAAQV,KAAKE,MAAMQ,MAC7BV,KAAKM,YACLN,KAAKC,KAAKO,GACVR,KAAKI,wBAIbH,cAAKC,GACDF,KAAKW,UAAUC,IAAKV,EAAMW,2BAG9BP,qBACQN,KAAKc,UACLd,KAAKc,SAASR,UAAUN,KAAKe,kBAKrCX,8BACQY,EAAOhB,KACXA,KAAKc,SAAW,IAAIG,8BAAsBC,GACtCA,EAAQC,iBAAQC,GACRA,EAAMC,kBAAoB,IAC1BrB,EAAKsB,cAAcN,EAAKd,MAAMQ,KAC9BV,EAAKc,SAASR,UAAUc,EAAMG,aAItCC,WAAYxB,KAAKE,MAAMsB,YAAc,YACrCC,UAAW,KAEfzB,KAAKc,SAASV,QAAQJ,KAAKe,kBAG/BO,uBAAcZ,cACVV,KAAK0B,UAAUhB,WAAMiB,GACjB3B,EAAKW,UAAUC,IAAKF,EAAKkB,QAAQ,mBAIzCF,mBAAUhB,EAAKmB,GACX,GAAI7B,KAAKe,IAAIL,IAAIoB,SAASpB,GAGtB,OAFAqB,QAAQC,IAAI,8BACZH,IAGJI,IAAIlB,EAAM,IAAImB,MACdnB,EAAIoB,OAASN,EACbd,EAAIL,IAAMA,eAGd0B,6BACI,mPAnE+BC"}